<?php

class address
{
    private $pointX;
    private $pointY;
    private $Array;
    public function __construct($X,$Y){
        $this->pointY=Y;
        $this->pointX=X;
        $this->Array=[];
    }

    /**
     * @return array
     */
    public function getArray(): array
    {
        return $this->Array;
    }

    /**
     * @param array $Array
     */
    public function setArray(array $Array)
    {
        $this->Array = $Array;
    }
    /**
 * @return mixed
 */
    public function getPointX()
    {
        return $this->pointX;
    }

    /**
     * @return mixed
     */
    public function getPointY()
    {
        return $this->pointY;
    }

    /**
     * @param mixed $pointX
     */
    public function setPointX($pointX)
    {
        $this->pointX = $pointX;
    }

    /**
     * @param mixed $pointY
     */
    public function setPointY($pointY)
    {
        $this->pointY = $pointY;
    }
    public function SetXY(){
        $this->pointX;
        $this->pointY;
    }
    public function GetXY(){
        array_push($this->Array,$this->pointX);
        array_push($this->Array,$this->pointY);
        return $this->Array;
    }
    public function __toString()
    {   return $this->pointX.",".$this->pointY;
        // TODO: Implement __toString() method.
    }

}

?>
<?php
class MoveAblePoint extends address
{
    public $Speed_X;
    public $Speed_Y;

    public function __construct()
    {

    }

    /**
     * @param mixed $Speed_X
     */
    public function setSpeedX($Speed_X)
    {
        $this->Speed_X = $Speed_X;
    }

    /**
     * @param mixed $Speed_Y
     */
    public function setSpeedY($Speed_Y)
    {
        $this->Speed_Y = $Speed_Y;
    }

    /**
     * @return mixed
     */
    public function getSpeedX()
    {
        return $this->Speed_X;
    }

    /**
     * @return mixed
     */
    public function getSpeedY()
    {
        return $this->Speed_Y;
    }

    public function SetXY()
    {
        $this->xSpeed;
        $this->ySpeed;
        parent::SetXY(); // TODO: Change the autogenerated stub
    }

    public function getPointX()
    {
        return parent::getPointX(); // TODO: Change the autogenerated stub
    }

    public function getPointY()
    {
        return parent::getPointY(); // TODO: Change the autogenerated stub
    }

    public function getArray(): array
    {
        return parent::getArray(); // TODO: Change the autogenerated stub
    }

    public function GetXY()
    {
        return parent::GetXY(); // TODO: Change the autogenerated stub
    }

    public function setPointX($pointX)
    {
        parent::setPointX($pointX); // TODO: Change the autogenerated stub
    }

    public function setPointY($pointY)
    {
        parent::setPointY($pointY); // TODO: Change the autogenerated stub
    }

    public function setArray(array $Array)
    {
        $array = $Array;
        array_push($array, $this->xSpeed);
        array_push($array, $this->ySpeed);
        // TODO: Change the autogenerated stub
    }

    public function __toString()
    {
        return parent::__toString() . $this->xSpeed . "," . $this->xSpeed; // TODO: Change the autogenerated stub
    }
}

$Array = [];
$move = new MoveAblePoint();
$move->setPointX(10);
$move->setPointY(20);
$move->setSpeedX(5);
$move->setSpeedY(5);
$move->setArray($Array);
echo "hello";
?>
<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>

</body>
</html>
